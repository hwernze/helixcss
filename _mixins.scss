
///
// Custom Media Queries
///

@mixin above( $min ) {
    @media only screen and (min-width: $min) { @content; }
}
@mixin below( $max ) {
    @media only screen and (max-width: $max) { @content; }
}
@mixin between( $min, $max ) {
    @media only screen and (min-width: $min) and (max-width: $max) { @content; }
}

///
// Shorthand Queries
///

@mixin sm { @include below($md_begin - 1) { @content; } }
@mixin md { @include between($md_begin, $lg_begin - 1) { @content; } }
@mixin lg { @include above($lg_begin) { @content; } }

@mixin sm-md { @include below($lg_begin - 1) { @content; } }
@mixin md-lg { @include above($md_begin) { @content; } }

///
// Retina Queries
///

@mixin retina {
    @media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 124dpi), (min-resolution: 1.3dppx) {
        @content;
    }
}

@mixin retina-bg( $url, $width, $height ) {
    @include retina {
        background-image: url($url);
        background-size: $width $height;
    }
}

///
// Create vendor-prefixed CSS in one go.
// Source: github.com/csswizardry/inuit.css/blob/master/generic/_mixins.scss#L49
///

@mixin vendor( $property, $value... ) {
    -webkit-#{$property}: $value;
       -moz-#{$property}: $value;
        -ms-#{$property}: $value;
         -o-#{$property}: $value;
            #{$property}: $value;
}

///
// Keyframe
//
// .elem {
//     @include vendor( animation, 1s shrink );
// }
// @include keyframes( shrink ) {
//     0% {}
//     50% {}
//     100% {}
// }
///

@mixin keyframes( $animation_name ) {
    @-webkit-keyframes #{$animation_name} { @content; }
       @-moz-keyframes #{$animation_name} { @content; }
        @-ms-keyframes #{$animation_name} { @content; }
         @-o-keyframes #{$animation_name} { @content; }
            @keyframes #{$animation_name} { @content; }
}

///
// Background Gradient
// @param {Color} $startColor [#3C3C3C] - Start Color
// @param {Color} $endColor [#999999] - End Color
///

@mixin background-gradient( $startColor: #3C3C3C, $endColor: #999999 ) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(top, $startColor, $endColor);
    background-image:    -moz-linear-gradient(top, $startColor, $endColor);
    background-image:     -ms-linear-gradient(top, $startColor, $endColor);
    background-image:      -o-linear-gradient(top, $startColor, $endColor);
    background-image:         linear-gradient(top, $startColor, $endColor);
}

///
// Background Horizontal
// @param {Color} $startColor [#3C3C3C] - Start Color
// @param {Color} $endColor [#999999] - End Color
///

@mixin background-horizontal( $startColor: #3C3C3C, $endColor: #999999 ) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(left, $startColor, $endColor);
    background-image:    -moz-linear-gradient(left, $startColor, $endColor);
    background-image:     -ms-linear-gradient(left, $startColor, $endColor);
    background-image:      -o-linear-gradient(left, $startColor, $endColor);
    background-image:         linear-gradient(left, $startColor, $endColor);
}

///
// Background Radial
// @param {Color} $startColor [#3C3C3C] - Start Color
// @param {Percentage} $startPos [0%] - Start position
// @param {Color} $endColor [#999999] - End Color
// @param {Percentage} $endPos [100%] - End position
///

@mixin background-radial( $startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100% ) {
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
    background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background:    -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
    background:     -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background:      -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background:         radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}

///
// Placeholder Styling
///

@mixin placeholder-styles {
    &::-webkit-input-placeholder { @content; } // Safari and Chrome
         &:-ms-input-placeholder { @content; } // Internet Explorer 10+
             &::-moz-placeholder { @content; opacity: 1; } // Firefox 19+
}

///
// Selection Styling
///

@mixin selection-styles {
    &::-moz-selection { @content; } // firefox
         &::selection { @content; } // webkit, opera, IE9
}

///
// Border Radius
///

@mixin border-radius( $radius:0 ) {
    @if 0 != $radius {
        background-clip: padding-box;
        border-radius: $radius;
    }
}

///
// List reset
///

@mixin list-reset {
    list-style: none;
    padding-left: 0;
}

@mixin list-reset-deep {
    &, & ul, & ol, {
        list-style: none;
        padding-left: 0;
    }
}

///
// Centering
// This needs to be within a non static positioned parent.
///

@mixin center-absolute( $x:50%, $y:50% ) {
    $x_flipped: $x;
    $y_flipped: $y;

    @if $x > 0 { $x_flipped: -$x; }
    @if $y > 0 { $y_flipped: -$y; }

    position: absolute;
    left: $x; top: $y;
    transform: translate( $x_flipped, $y_flipped );
}

///
// Cover Screen
///

@mixin cover-screen {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999999999;
}

///
// Striped Table
// table { @include table-striped(#eee); }
///

@mixin table-striped( $stripe_color ) {
    tbody tr:nth-of-type(odd){
        background-color: $stripe_color;
    }
}

///
// Image replacement
///

@mixin image-replacement {
    font: "0/0" a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

// alias
@mixin ir {
    @include image-replacement;
}

///
// Truncate
// Prevents a string of text from breaking into the 2nd line and adds an ellipsis to the end.
///

@mixin truncate( $width:100% ) {
    max-width: 100%;
    width: $width;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// alias
@mixin ellipsis( $width:100% ) {
    @include truncate( $width );
}

///
// Word Break
// Forces words to break into the 2nd line.
///

@mixin break-words {
    word-wrap: break-word; // fallback & alias to...
    overflow-wrap: break-word; // newest CSS3
}
